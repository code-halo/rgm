levelplot(permutation_matrix)
library(lattice)
levelplot(permutation_matrix)
rownames(permutation_matrix) <- paster("V",c(1:12));
rownames(permutation_matrix) <- paste("V",c(1:12));
levelplot(permutation_matrix)
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
levelplot(permutation_matrix)
levelplot(permutation_matrix,xlab="X",ylab="Y")
levelplot(permutation_matrix,xlab="X",ylab="Y",main="Permutation Matrix mapping from network X to Y")
levelplot(permutation_matrix,xlab="X",ylab="Y",main="Permutation Matrix Mapping Nodes from Network X to Network Y")
levelplot(permutation_matrix,xlab="X",ylab="Y",main="Permutation Matrix Mapping Nodes from X to Y")
levelplot(permutation_matrix,xlab="X",ylab="Y",main="Permutation Matrix Mapping Nodes from X to Y",
colorkey=c("red","green"))
levelplot(permutation_matrix,xlab="X",ylab="Y",main="Permutation Matrix Mapping Nodes from X to Y",
col.regions=c("red","green"))
levelplot(permutation_matrix,xlab="X",ylab="Y",main="Permutation Matrix Mapping Nodes from X to Y",
col.regions=c("red","green",margin=FALSE))
library(rasterVis)
install.packages("rasterVis")
library(data.table)
library(ggplot2)
library(lattice)
library(rasterVis)
setwd(".")
permutation_matrix <- as.matrix(read.table("../Data/P_adj_mat.txt",header=FALSE))
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
r <- raster(permutation_matrix)
r <- ratify(r)
rat <- levels(r)[[1]]
rat$code <- c(0, 1)
levels(r) <- rat
levelplot(r)
r
r@data
rat
r
levelplot(r,xlab="Y",ylab="X")
levelplot(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col.regions=c("red","green"))
heatmap(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col.regions=c("red","green"))
?heatmap
heatmap(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
keep.dendro=FALSE)
?heatmap
heatmap(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
keep.dendro=FALSE,Rowv=NULL,Colv=NULL)
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y")
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),add=TRUE)
e <- expand.grid(seq(0,1, length=3), seq(1,0, length=4))
text(e, labels=t(tt))
image.plot(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
seq(1,12,length=12)
axis(3,at=seq(1,12,length=12),labels=rownames(permutation_matrix),lwd=0,pos=1.15)
axis(1,at=seq(1,12,length=12),labels=rownames(permutation_matrix),lwd=0,pos=1.15)
axis(1,at=seq(1,12,length=12),labels=rownames(permutation_matrix))
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
permutation_matrix <- as.matrix(read.table("../Data/P_adj_mat.txt",header=FALSE))
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
seq(0,1,length=12)
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
install.packages("fields")
legend(c(0,1))
legend(grconvertX(0, "device"), grconvertY(1, "device"),
c("0","1"), fill = colMap[c("black", "white")], xpd = NA)
legend(grconvertX(0, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
?legend
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(0, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA, horiz = TRUE)
permutation_matrix <- as.matrix(read.table("../Data/P_adj_mat.txt",header=FALSE))
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(x=1.25,y=0.5,grconvertX(0, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(0.5, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(1, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(10, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(1000, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(100, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
permutation_matrix <- as.matrix(read.table("../Data/P_adj_mat.txt",header=FALSE))
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(100, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(500, "device"), grconvertY(1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(500, "device"), grconvertY(-1, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(500, "device"), grconvertY(100, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(500, "device"), grconvertY(300, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(500, "device"), grconvertY(150, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
permutation_matrix <- as.matrix(read.table("../Data/P_adj_mat.txt",header=FALSE))
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(150, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
par(c(4,4,4,4))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
par(c(4,4,2,2))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
?par
par(fig=c(0,0.8,0,0.8), new=TRUE)
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
permutation_matrix <- as.matrix(read.table("../Data/P_adj_mat.txt",header=FALSE))
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
par(fig=c(0,0.8,0,0.8), new=TRUE)
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(150, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
par(fig=c(0,0.8,0,0.8))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
permutation_matrix <- as.matrix(read.table("../Data/P_adj_mat.txt",header=FALSE))
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
par(fig=c(0,1,0,1))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
par(fig=c(0,0.9,0,0.9))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(150, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
par(fig=c(0,0.95,0,0.95))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(150, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
permutation_matrix <- as.matrix(read.table("../Data/P_adj_mat.txt",header=FALSE))
rownames(permutation_matrix) <- paste("V",c(1:12),sep="");
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
png(filename = "../Results/P_matrix_image.png",pointsize = 12, height = 10,width=10,units = "in")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 12, height = 600,width=600,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 10, height = 600,width=600,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 8, height = 600,width=600,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 15, height = 600,width=600,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 15, height = 700,width=700,units = "px",res = 400)
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 15, height = 700,width=700,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 16, height = 700,width=700,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(500, "device"), grconvertY(200, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 16, height = 700,width=700,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(600, "device"), grconvertY(250, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 16, height = 700,width=700,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(650, "device"), grconvertY(300, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
png(filename = "../Results/P_matrix_image.png",pointsize = 16, height = 700,width=700,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="Rows",ylab="Columns",main="Perturbation Matrix (Z)",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
par(fig=c(0,0.93,0,0.93))
image(perturbation_matrix,xlab="Rows",ylab="Columns",main="Perturbation Matrix (Z)",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
perturbation_matrix <- as.matrix(read.table("../Data/Z_adj_mat.txt",header=FALSE))
rownames(perturbation_matrix) <- paste("V",c(1:12),sep="")
par(fig=c(0,0.93,0,0.93))
image(perturbation_matrix,xlab="Rows",ylab="Columns",main="Perturbation Matrix (Z)",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
png(filename = "../Results/Z_matrix_image.png",pointsize = 16, height = 700,width=700,units = "px")
par(fig=c(0,0.93,0,0.93))
image(perturbation_matrix,xlab="Rows",ylab="Columns",main="Perturbation Matrix (Z)",
col=c("black","white"),axes=FALSE,lab.breaks=NULL)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix))
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix))
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
source('~/QCRI_PostDoc/Sanjay_Related/scripts/plot_sample_data.R')
?jpeg
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL,font.lab=4)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix),cex.lab=6)
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix),cex.lab=6)
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
jpeg(filename = "../Results/P_matrix_image.jpg",pointsize = 15, height = 700,width=700,units = "px",res=2)
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL,font.lab=4)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix),cex.lab=6)
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix),cex.lab=6)
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
jpeg(filename = "../Results/P_matrix_image.jpg",pointsize = 15, height = 700,width=700,units = "px",res=1)
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL,font.lab=4)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix),cex.lab=6)
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix),cex.lab=6)
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
jpeg(filename = "../Results/P_matrix_image.jpeg",pointsize = 15, height = 700,width=700,units = "px",res=1)
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL,font.lab=4)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix),cex.lab=6)
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix),cex.lab=6)
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
jpeg(filename = "../Results/P_matrix_image.jpeg",pointsize = 15, height = 700,width=700,units = "px")
par(fig=c(0,0.93,0,0.93))
image(permutation_matrix,xlab="X",ylab="Y",main="Permuation Matrix Mapping Nodes from X to Y",
col=c("black","white"),axes=FALSE,lab.breaks=NULL,font.lab=4)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix),cex.lab=6)
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix),cex.lab=6)
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
perturbation_matrix <- as.matrix(read.table("../Data/Z_adj_mat.txt",header=FALSE))
rownames(perturbation_matrix) <- paste("V",c(1:12),sep="")
jpeg(filename = "../Results/Z_matrix_image.jpeg",pointsize = 15, height = 700,width=700,units = "px")
par(fig=c(0,0.93,0,0.93))
image(perturbation_matrix,xlab="Rows",ylab="Columns",main="Perturbation Matrix (Z)",
col=c("black","white"),axes=FALSE,lab.breaks=NULL,font.lab=4)
axis(1,at=seq(0,1,length=12),labels=rownames(permutation_matrix),cex.lab=6)
axis(2,at=seq(0,1,length=12),labels=colnames(permutation_matrix),cex.lab=6)
legend(grconvertX(625, "device"), grconvertY(320, "device"),
c("0","1"), fill = c("black", "white"), xpd = NA)
dev.off()
source('~/QCRI_PostDoc/Sanjay_Related/scripts/plot_sample_data.R')
source('~/QCRI_PostDoc/Sanjay_Related/scripts/plot_sample_data.R')
source('~/QCRI_PostDoc/Sanjay_Related/scripts/plot_sample_data.R')
source('~/QCRI_PostDoc/Sanjay_Related/scripts/plot_sample_data.R')
source('~/QCRI_PostDoc/Sanjay_Related/scripts/plot_sample_data.R')
source('~/QCRI_PostDoc/Sanjay_Related/scripts/plot_sample_data.R')
source('~/QCRI_PostDoc/Sanjay_Related/scripts/plot_sample_data.R')
library(igraph)
library(Matrix)
library(devtools)
library(lattice)
library(qlcMatrix)
library(doParallel)
library(data.table)
#library(WGCNA)
registerDoParallel(4)
setwd('~/QCRI_PostDoc/Sanjay_Related/permutation_inference/Datasets/Real/CEL/')
overall_edgelist <- read.table("neurodata.txt",header=TRUE,sep=",")
overall_edgelist <- read.table("neurodata.txt",header=TRUE,sep=" ")
overall_edgelist <- read.table("neurodata.txt",header=TRUE,sep="\t")
str(overall_edgelist)
overall_edgelist <- read.table("neurodata.txt",header=FALSE,sep="\t")
str(overall_edgelist)
overall_edgelist <- overall_edgelist[,-ncol(overall_edgelist)];
str(overall_edgelist)
colnames(overall_edgelist) <- c("Source","Target","Location","Organism","Weight");
no_of_neurons <- unique(c(overall_edgelist[,1],overall_edgelist[,2]));
unique(overall_edgelist[,1])
overall_edgelist <- read.table("neurodata.txt",header=FALSE,sep="\t")
overall_edgelist <- overall_edgelist[,-ncol(overall_edgelist)]
colnames(overall_edgelist) <- c("Source","Target","Location","Organism","Weight");
overall_edgelist$Source <- as.character(as.vector(overall_edgelist$Source))
overall_edgelist$Target <- as.character(as.vector(overall_edgelist$Target))
overall_edgelist$Location <- as.character(as.vector(overall_edgelist$Location))
overall_edgelist$Organism <- as.character(as.vector(overall_edgelist$Organism))
no_of_neurons <- unique(c(overall_edgelist[,1],overall_edgelist[,2]))
unique(overall_edgelist$Organism)
table(overall_edgelist$Organism)
indices_JSH <- which(overall_edgelist$Organism=="JSH");
indices_N2U <- which(overall_edgelist$Organism=="N2U");
source('~/QCRI_PostDoc/Sanjay_Related/scripts/real_network_Celegans_analysis.R')
source('~/QCRI_PostDoc/Sanjay_Related/scripts/real_network_Celegans_analysis.R')
matrix_JSH
levelplot(matrix_JSH)
levelplot(matrix_N2U)
true_X <- matrix_JSH;
true_Y <- matrix_N2U;
true_Z <- matrix_JSH-matrix_N2U;
leveplot(true_X)
levelplot(true_X)
levelplot(true_Y)
levelplot(true_Z)
P = matrix(0,no_of_neurons,no_of_neurons);
P[1:no_of_neurons,1:no_of_neurons] <- 0;
permutation <- sample(20)
for (i in 1:no_of_neurons)
{
P[i,permutation[i]] <- 1;
}
imshow(P)
levelplot(P)
P
P[1:20,1:20]
n <- 20;
permutation <- sample(n)
P = matrix(0,no_of_neurons,no_of_neurons);
P[1:no_of_neurons,1:no_of_neurons] <- 0;
for (i in 1:no_of_neurons)
{
if (i <= n)
{
P[i,permutation[i]] <- 1;
} else {
P[i,i] <- 1;
}
}
levelplot(P)
perm_X <- P%*%true_X%*%t(P);
levelplot(perm_X)
levelplot(true_X)
levelplot(true_X-perm_X)
levelplot(true_X-P%*%perm_X%*%t(P))
perm_X <- t(P)%*%true_X%*%P;
levelplot(true_X-P%*%perm_X%*%t(P))
levelplot(true_Y-P%*%perm_X%*%t(P)-true_Z)
levelplot(true_Y-P%*%perm_X%*%t(P)+true_Z)
source('~/QCRI_PostDoc/Sanjay_Related/scripts/real_network_Celegans_analysis.R')
levelplot(true_Y-P%*%perm_X%*%t(P)+true_Z)
levelplot(true_Y-P%*%perm_X%*%t(P)-true_Z)
source('~/QCRI_PostDoc/Sanjay_Related/scripts/real_network_Celegans_analysis.R')
library(igraph)
library(Matrix)
library(devtools)
library(lattice)
library(qlcMatrix)
library(doParallel)
library(data.table)
#library(WGCNA)
registerDoParallel(4)
setwd('~/QCRI_PostDoc/Sanjay_Related/permutation_inference/Datasets/Real/CEL/')
overall_edgelist <- read.table("neurodata.txt",header=FALSE,sep="\t")
overall_edgelist <- overall_edgelist[,-ncol(overall_edgelist)]
colnames(overall_edgelist) <- c("Source","Target","Location","Organism","Weight");
overall_edgelist$Source <- as.character(as.vector(overall_edgelist$Source))
overall_edgelist$Target <- as.character(as.vector(overall_edgelist$Target))
overall_edgelist$Location <- as.character(as.vector(overall_edgelist$Location))
overall_edgelist$Organism <- as.character(as.vector(overall_edgelist$Organism))
#No of unique neurons
neurons <- unique(c(overall_edgelist[,1],overall_edgelist[,2]))
no_of_neurons <- length(neurons);
indices_JSH <- which(overall_edgelist$Organism=="JSH");
indices_N2U <- which(overall_edgelist$Organism=="N2U");
edgelist_JSH <- overall_edgelist[indices_JSH,c(1,2,5)];
edgelist_N2U <- overall_edgelist[indices_N2U,c(1,2,5)];
matrix_JSH <- matrix(0,nrow=no_of_neurons,ncol=no_of_neurons);
matrix_N2U <- matrix(0,nrow=no_of_neurons,ncol=no_of_neurons);
rownames(matrix_JSH) <- neurons;
colnames(matrix_JSH) <- neurons;
rownames(matrix_N2U) <- neurons;
colnames(matrix_N2U) <- neurons;
for (i in 1:nrow(edgelist_JSH))
{
source <- edgelist_JSH$Source[i]
target <- edgelist_JSH$Target[i]
matrix_JSH[source,target] <- 1;
matrix_JSH[target,source] <- 1;
}
for (i in 1:nrow(edgelist_N2U))
{
source <- edgelist_N2U$Source[i]
target <- edgelist_N2U$Target[i]
matrix_N2U[source,target] <- 1;
matrix_N2U[target,source] <- 1;
}
true_X <- matrix_JSH;
true_Y <- matrix_N2U;
true_Z <- matrix_N2U-matrix_JSH;
levelplot(true_X)
levelplot(true_Y)
levelplot(true_Z)
